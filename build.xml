<project name="PAva-tracer" default="dist" basedir=".">
    <description>
        simple example build file
    </description>
  <!-- set global properties for this build -->
  <property name="src" location="src"/>
  <property name="build" location="classes"/>
  <property name="dist"  location="dist"/>
  <property name="base" value="ist.meic.pa"/>
  <property name="lib.dir" value="lib"/>
  <property name="main"  value="${base}.TraceVM"/>
	
  <path id="external.jars">
  	<fileset dir="${lib.dir}" includes="**/*.jar"/>
  </path>
  	
  <path id="project.classpath">
  	<pathelement location="${build}"/>
  	<path refid="external.jars" />
  </path>

  <target name="init">
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${build}"/>
  </target>

  <target name="compile" depends="init"
        description="compile the source " >
    <!-- Compile the java code from ${src} into ${build} -->
    <javac debug="true" srcdir="${src}" destdir="${build}" classpathref="project.classpath"/>
  </target>

  <target name="dist" depends="compile"
        description="generate the distribution" >
    <!-- Create the distribution directory -->
    <mkdir dir="${dist}"/>

    <!-- Put everything in ${build} into the MyProject-${DSTAMP}.jar file -->
    <jar jarfile="${dist}/${ant.project.name}.jar" basedir="${build}"/>
  		<manifest>
			<attribute name="Main-Class" value="${main}"/>
  	    </manifest>
  </target>

  <target name="clean"
        description="clean up" >
    <!-- Delete the ${build} and ${dist} directory trees -->
    <delete dir="${build}"/>
    <delete dir="${dist}"/>
  </target>
    	
  <target name="run0" depends="compile"
	    description="run" >
	    <java classname="${main}" fork="true">
			<classpath refid="project.classpath"/>
	    	<arg value="${base}.tests.Test0"/>
		</java>
	  </target>
	<target name="run1" depends="compile"
		    description="run" >
		    <java classname="${main}" fork="true">
				<classpath refid="project.classpath"/>
		    	<arg value="${base}.tests.Test1"/>
			</java>
		  </target>
</project>
